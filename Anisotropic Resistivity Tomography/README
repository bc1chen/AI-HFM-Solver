This is a testing code for solving three-dimensional steady anisotropic problem with multigrid. 
------------ Testing and debugging -----------------
$ Anisotropic_3d_Multigrid_7point.ipynb: 
Initial testing code for a cube domain with uniform grid size and without boundary conditions
$ Anisotropic_3d_Multigrid_7point_BC.ipynb: 
Add Neumann boundary condition at the top of the domain 
$ Anisotropic_3d_Multigrid_7point_BC_Rec.ipynb: 
Test the code for a rectangular domain still with uniform grid size 
------------ Merged version -----------------
$ BGS_multigrid_v1.ipynb
Implement non-uniform grid size based on the theory for the formula 
            A_MAT_I_J_K(I,J,K) = 0.5*(KDIFF(I,J,K)+KDIFF(I-1,J,K))        /((0.5*(DX(I,J,K)+DX(I-1,J,K)))**2) &
                               + 0.5*(KDIFF(I,J,K)+KDIFF(I+1,J,K))        /((0.5*(DX(I,J,K)+DX(I+1,J,K)))**2) &
                               + 0.5*(KDIFF(I,J,K)+KDIFF(I,J-1,K))        /((0.5*(DY(I,J,K)+DY(I,J-1,K)))**2) &
                               + 0.5*(KDIFF(I,J,K)+KDIFF(I,J+1,K))        /((0.5*(DY(I,J,K)+DY(I,J+1,K)))**2) &
                               + 0.5*(KDIFF_Z(I,J,K)+KDIFF_Z(I,J,K-1))    /((0.5*(DZ(I,J,K)+DZ(I,J,K-1)))**2) &
                               + 0.5*(KDIFF_Z(I,J,K)+KDIFF_Z(I,J,K+1))    /((0.5*(DZ(I,J,K)+DZ(I,J,K+1)))**2)

            A_MAT_IP1_J_K(I,J,K) =  - 0.5*(KDIFF(I,J,K)+KDIFF(I+1,J,K)) /((0.5*(DX(I,J,K)+DX(I+1,J,K)))**2)
            A_MAT_IM1_J_K(I,J,K) =  - 0.5*(KDIFF(I,J,K)+KDIFF(I-1,J,K)) /((0.5*(DX(I,J,K)+DX(I-1,J,K)))**2)
            A_MAT_I_JP1_K(I,J,K) =  - 0.5*(KDIFF(I,J,K)+KDIFF(I,J+1,K)) /((0.5*(DY(I,J,K)+DY(I,J+1,K)))**2)
            A_MAT_I_JM1_K(I,J,K) =  - 0.5*(KDIFF(I,J,K)+KDIFF(I,J-1,K)) /((0.5*(DY(I,J,K)+DY(I,J-1,K)))**2)
            A_MAT_I_J_KP1(I,J,K) =  - 0.5*(KDIFF_Z(I,J,K)+KDIFF_Z(I,J,K+1)) /((0.5*(DZ(I,J,K)+DZ(I,J,K+1)))**2)
            A_MAT_I_J_KM1(I,J,K) =  - 0.5*(KDIFF_Z(I,J,K)+KDIFF_Z(I,J,K-1)) /((0.5*(DZ(I,J,K)+DZ(I,J,K-1)))**2)
